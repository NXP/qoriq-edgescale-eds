#####################################
#
# Copyright 2017-2018 NXP
#
#####################################

#!/bin/bash

/usr/local/edgescale/bin/cert-agent
. /data/config.env

dd if=/dev/mmcblk0 of=/tmp/ota-info bs=512 skip=129024 count=1
platform=`cat /tmp/ota-info | awk '{print $2}'`
oldimageVersion=`cat /tmp/ota-info | awk '{print $3}'`
oldmid=`cat /tmp/ota-info | awk '{print $6}'`
solutionname=$1
newimageVersion=$2
mid=$3

if [ ! $oldimageVersion ];then
    oldimageVersion=0
fi

if [ "$platform"x == x ];then
    echo "there is no platform information"
        exit 1
fi

deviceid=`hostname`

get_imageURL(){
	api_result=`curl -H "Accept: application/json; version=$version" -H "access-token: $(cat /data/.edgescale.cred)" "$ES_API_URI/devices/softwares?device_id=$deviceid&solution=$solutionname&version=$newimageVersion"`
	imageURL=`echo $api_result | grep url | sed 's/\"//g' | sed 's/.*url:\(.*$\)/\1/' | awk -F "[,}]" '{print $1}' | sed 's/^[ \t]*//g'`
}

get_imageURL
if [ $imageURL ];then
	echo "have a new image version=$newimageVersion, machine will reboot and install it!!!!!!!!!!!!!!!!!!!!!!!!!"
	curl -X POST -H "Content-Type: application/json; version=$version" $ES_API_URI/devices/tasks/status -d '{"device":"'$deviceid'", "mid":'$mid', "status":"ota-start"}'
	if [ "$mid" == "$oldmid" ];then
		exit 1
	fi
	updateStatus=8
	echo "$updateStatus $platform $oldimageVersion $newimageVersion $solutionname $mid" > /tmp/ota-info
	dd if=/tmp/ota-info of=/dev/mmcblk0 bs=512 seek=129024 count=1 conv=sync
	reboot
else
	echo "could not get image,solution=$solutionname version=$newimageVersion"
fi
