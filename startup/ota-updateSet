#####################################
#
# Copyright 2017-2018 NXP
#
#####################################

#!/bin/bash

/usr/local/edgescale/bin/cert-agent
. /data/config.env

dd if=/dev/mmcblk0 of=/tmp/ota-info bs=512 skip=129024 count=1
platform=`cat /tmp/ota-info | awk '{print $2}'`
oldimageVersion=`cat /tmp/ota-info | awk '{print $3}'`
oldmid=`cat /tmp/ota-info | awk '{print $8}'`
solutionname=$1
newimageVersion=$2
mid=$3
solutionid=$4
autoOta=0

if [ ! $oldimageVersion ];then
    oldimageVersion=0
fi

if [ "$platform"x == x ];then
    echo "there is no platform information"
    exit 1
fi

if [ "$mid" == "$oldmid" ];then
    exit 0
fi

deviceid=$ES_DEVICEID

get_imageURL(){
	api_result=`curl -H "Accept: application/json; version=$version" -H "access-token: $(cat /data/.edgescale.cred)" "$ES_API_URI/devices/softwares?device_id=$deviceid&solution=$solutionname&version=$newimageVersion"`
	imageURL=`echo $api_result | grep url | sed 's/\"//g' | sed 's/.*url:\(.*$\)/\1/' | awk -F "[,}]" '{print $1}' | sed 's/^[ \t]*//g'`
}

download_images(){
	feedback_status "ota-fetch"
	download_path=/updateImages
	mkdir -p ${download_path}

	count=0
	while [ $count -le 5 ]
	do
		wget -O /updateImages/full_images.tgz -c $imageURL
		if [ $? != 0 ];then
			((count++))
			echo "retrying $count times"
			sleep 5
		else
			break
		fi
	done

	if [ $count -gt 5 ];then
		return 1
	elif [ ! -e ${download_path}/*.tgz ];then
		return 1
	else
		return 0
	fi
}

feedback_status(){
	curl -X POST -H "Content-Type: application/json; version=$version" -H "access-token: $(cat /data/.edgescale.cred)" $ES_API_URI/devices/tasks/status -d '{"device":"'$deviceid'", "mid":'$mid', "status":"'"$1"'"}'
}

get_imageURL

if [ $imageURL ];then
	echo "have a new image version=$newimageVersion, machine will reboot and install it!!!!!!!!!!!!!!!!!!!!!!!!!"
	feedback_status "ota-start"
	updateStatus=8
	echo "$updateStatus $platform $oldimageVersion $newimageVersion $solutionname $solutionid $autoOta $mid" > /tmp/ota-info
	dd if=/tmp/ota-info of=/dev/mmcblk0 bs=512 seek=129024 count=1 conv=sync

	download_images
	if [ $? -eq 0 ];then
		sleep 5
		reboot
	else
		echo "Download solution image failed"
		exit 1
	fi
else
	echo "could not get image,solution=$solutionname version=$newimageVersion"
fi
